PROCEDURE ACTUALIZAR_DETALLE_PAGO(
    IN_ASIENTO          IN NUMBER,
    IN_CONSECUTIVO_PAGO IN NUMBER,
    IN_USUARIO          IN VARCHAR2,
    IN_ESTADO_SAAP      IN NUMBER,
    IN_CXC_ID           IN MPENGES.SPG_CUENTA_POR_COBRAR.CUENTA_POR_COBRAR_ID%TYPE,
    IN_DETALLE_PAGO     IN MPENGES.SPG_DETALLE_PAGO%ROWTYPE,
    IN_PAGO_ID          IN MPENGES.SPG_PAGO.PAGO_ID%TYPE,
    IN_PAGADOR          IN VARCHAR2
)

IS
    l_error           VARCHAR2(2000);
    l_sysdate_detalle DATE := SYSDATE;
	
    -- Tipos para procesamiento en bloque

    TYPE t_detalle_pago_id IS TABLE OF MPENGES.SPG_DETALLE_PAGO.DETALLE_PAGO_ID%TYPE INDEX BY PLS_INTEGER;
    TYPE t_mfondos_scn IS TABLE OF MPENGES.SPG_DETALLE_PAGO.MFONDOS_SCN%TYPE INDEX BY PLS_INTEGER;
	
    v_ids   t_detalle_pago_id;
    v_scn   t_mfondos_scn;

BEGIN

    IF IN_PAGO_ID IS NULL AND IN_DETALLE_PAGO.DETALLE_PAGO_ID IS NOT NULL THEN

        -- Caso exitoso: actualizar un solo detalle de pago

        UPDATE MPENGES.SPG_DETALLE_PAGO

        SET ESTADO_SAAP = IN_ESTADO_SAAP,
            ESTADO = C_ESTADO_PAGO_PAGADO,
            CONSECUTIVO_PAGO = IN_CONSECUTIVO_PAGO,
            NUMERO_ASIENTO_ID = IN_ASIENTO,
            CUENTA_POR_COBRAR_ID = IN_CXC_ID,
            USUARIO_ULTIMA_MODIFICACION = IN_USUARIO,
            FECHA_ULTIMA_MODIFICACION = l_sysdate_detalle,
            MFONDOS_SCN = MFONDOS_SCN + 1

        WHERE DETALLE_PAGO_ID = IN_DETALLE_PAGO.DETALLE_PAGO_ID;
        UPDATE MNOMPEN.NOMP_PRELIQUIDACION_PAGO
        SET ESTADO_PRELIQUIDACION = C_PRE_ESTADO_AUTORIZADO
        WHERE PAGO_ID = IN_DETALLE_PAGO.PAGO_ID;

        IF IN_PAGADOR = C_PARAMETRO_FONDO THEN

            UPDATE MPENGES.SPG_PAGO
            SET ESTADO_COMISION = 'PENDIENTE_EJECUTAR',
                ESTADO_CCM_ENVIO = 'PENDIENTE_EJECUTAR',
                ESTADO_COMPROBANTE_NOMINA = 'PENDIENTE',
                FECHA_PAGO = l_sysdate_detalle,
                USUARIO_ULTIMA_MODFICACION = IN_USUARIO,
                FECHA_ULTIMA_MODIFICACION = l_sysdate_detalle,
                MFONDOS_SCN = MFONDOS_SCN + 1
            WHERE PAGO_ID = IN_DETALLE_PAGO.PAGO_ID;

        ELSE

            UPDATE MPENGES.SPG_PAGO
            SET ESTADO_CCM_ENVIO = 'PENDIENTE_EJECUTAR',
                ESTADO_COMPROBANTE_NOMINA = 'PENDIENTE',
                USUARIO_ULTIMA_MODFICACION = IN_USUARIO,
                FECHA_ULTIMA_MODIFICACION = l_sysdate_detalle,
                MFONDOS_SCN = MFONDOS_SCN + 1
            WHERE PAGO_ID = IN_DETALLE_PAGO.PAGO_ID;

        END IF;

    ELSE

        -- Caso de error: actualizar todos los detalles del pago a ERROR

        SELECT DETALLE_PAGO_ID, MFONDOS_SCN
        BULK COLLECT INTO v_ids, v_scn
        FROM MPENGES.SPG_DETALLE_PAGO P
        JOIN MPENGES.SPG_OPERACION_CONCEPTO C
          ON P.OPERACION_CONCEPTO_ID = C.OPERACION_CONCEPTO_ID
        WHERE C.TIPO_PAGO_ID = C_COD_OPER_RET_PROGRAMADO
          AND P.PAGO_ID = IN_PAGO_ID;

        FORALL i IN v_ids.FIRST .. v_ids.LAST

            UPDATE MPENGES.SPG_DETALLE_PAGO
            SET ESTADO = C_ESTADO_ERROR,
                USUARIO_ULTIMA_MODIFICACION = IN_USUARIO,
                FECHA_ULTIMA_MODIFICACION = l_sysdate_detalle,
                MFONDOS_SCN = v_scn(i) + 1
            WHERE DETALLE_PAGO_ID = v_ids(i);

        UPDATE MNOMPEN.NOMP_PRELIQUIDACION_PAGO

        SET ESTADO_PRELIQUIDACION = C_PRE_ESTADO_ERROR_LIQ,
            USUARIO_ULTIMA_MODIFICACION = USER,
            FECHA_ULTIMA_MODIFICACION = l_sysdate_detalle

        WHERE PAGO_ID = IN_PAGO_ID;

    END IF;

EXCEPTION

    WHEN OTHERS THEN

        l_error := 'PAGO_ID [' || IN_DETALLE_PAGO.PAGO_ID || '], ' ||
                   'DETALLE_PAGO_ID [' || IN_DETALLE_PAGO.DETALLE_PAGO_ID || '], ' ||
                   '[ERROR_ACTUALIZANDO_DETALLE_PAGO] - Error[' || SQLERRM || '] Traza[' ||
                   DBMS_UTILITY.FORMAT_ERROR_BACKTRACE || ']';

        RAISE_APPLICATION_ERROR(-20001, l_error);
END ACTUALIZAR_DETALLE_PAGO;

 
